(IN-PACKAGE #:FREEIMAGE) 

(DEFMACRO DEFANONENUM (&BODY ENUMS)
  "Converts anonymous enums to defconstants."
  `(PROGN
    ,@(LOOP FOR VALUE IN ENUMS FOR INDEX = 0 THEN (1+ INDEX) WHEN (LISTP VALUE)
            DO (SETF INDEX (SECOND VALUE) VALUE (FIRST VALUE)) COLLECT
            `(DEFCONSTANT ,VALUE ,INDEX)))) 

(EVAL-WHEN (:COMPILE-TOPLEVEL :LOAD-TOPLEVEL)
  (UNLESS (FBOUNDP 'SWIG-LISPIFY)
    (DEFUN SWIG-LISPIFY (NAME FLAG &OPTIONAL (PACKAGE *PACKAGE*))
      (LABELS ((HELPER (LST LAST REST &AUX (C (CAR LST)))
                 (COND ((NULL LST) REST)
                       ((UPPER-CASE-P C)
                        (HELPER (CDR LST) 'UPPER
                         (CASE LAST
                           ((LOWER DIGIT) (LIST* C #\- REST))
                           (T (CONS C REST)))))
                       ((LOWER-CASE-P C)
                        (HELPER (CDR LST) 'LOWER (CONS (CHAR-UPCASE C) REST)))
                       ((DIGIT-CHAR-P C)
                        (HELPER (CDR LST) 'DIGIT
                         (CASE LAST
                           ((UPPER LOWER) (LIST* C #\- REST))
                           (T (CONS C REST)))))
                       ((CHAR-EQUAL C #\_)
                        (HELPER (CDR LST) '_ (CONS #\- REST)))
                       (T (ERROR "Invalid character: ~A" C)))))
        (LET ((FIX
               (CASE FLAG ((CONSTANT ENUMVALUE) "+") (VARIABLE "*") (T ""))))
          (INTERN
           (CONCATENATE 'STRING FIX
                        (NREVERSE (HELPER (CONCATENATE 'LIST NAME) NIL NIL))
                        FIX)
           PACKAGE)))))) 

(DEFCONSTANT FREEIMAGE-MAJOR-VERSION 3) 

(DEFCONSTANT FREEIMAGE-MINOR-VERSION 13) 

(DEFCONSTANT FREEIMAGE-RELEASE-SERIAL 1) 

(DEFCONSTANT FREEIMAGE-COLORORDER-BGR 0) 

(DEFCONSTANT FREEIMAGE-COLORORDER-RGB 1) 

(DEFCONSTANT FREEIMAGE-COLORORDER 0) 

(CFFI:DEFCSTRUCT FIBITMAP (DATA :POINTER)) 

(CFFI:DEFCSTRUCT FIMULTIBITMAP (DATA :POINTER)) 

(DEFCONSTANT FALSE 0) 

(DEFCONSTANT TRUE 1) 

(DEFCONSTANT NULL 0) 

(DEFCONSTANT SEEK-SET 0) 

(DEFCONSTANT SEEK-CUR 1) 

(DEFCONSTANT SEEK-END 2) 

(CFFI:DEFCSTRUCT RGBQUAD (RGBBLUE :POINTER) (RGBGREEN :POINTER)
                 (RGBRED :POINTER) (RGBRESERVED :POINTER)) 

(CFFI:DEFCSTRUCT RGBTRIPLE (RGBTBLUE :POINTER) (RGBTGREEN :POINTER)
                 (RGBTRED :POINTER)) 

(CFFI:DEFCSTRUCT BITMAPINFOHEADER (BISIZE :POINTER) (BIWIDTH :POINTER)
                 (BIHEIGHT :POINTER) (BIPLANES :POINTER) (BIBITCOUNT :POINTER)
                 (BICOMPRESSION :POINTER) (BISIZEIMAGE :POINTER)
                 (BIXPELSPERMETER :POINTER) (BIYPELSPERMETER :POINTER)
                 (BICLRUSED :POINTER) (BICLRIMPORTANT :POINTER)) 

(CFFI:DEFCSTRUCT BITMAPINFO (BMIHEADER BITMAPINFOHEADER) (BMICOLORS :POINTER)) 

(CFFI:DEFCSTRUCT FIRGB16 (RED :POINTER) (GREEN :POINTER) (BLUE :POINTER)) 

(CFFI:DEFCSTRUCT FIRGBA16 (RED :POINTER) (GREEN :POINTER) (BLUE :POINTER)
                 (ALPHA :POINTER)) 

(CFFI:DEFCSTRUCT FIRGBF (RED :FLOAT) (GREEN :FLOAT) (BLUE :FLOAT)) 

(CFFI:DEFCSTRUCT FIRGBAF (RED :FLOAT) (GREEN :FLOAT) (BLUE :FLOAT)
                 (ALPHA :FLOAT)) 

(CFFI:DEFCSTRUCT FICOMPLEX (R :DOUBLE) (I :DOUBLE)) 

(DEFCONSTANT FI-RGBA-RED 2) 

(DEFCONSTANT FI-RGBA-GREEN 1) 

(DEFCONSTANT FI-RGBA-BLUE 0) 

(DEFCONSTANT FI-RGBA-ALPHA 3) 

(DEFCONSTANT FI-RGBA-RED-MASK 16711680) 

(DEFCONSTANT FI-RGBA-GREEN-MASK 65280) 

(DEFCONSTANT FI-RGBA-BLUE-MASK 255) 

(DEFCONSTANT FI-RGBA-ALPHA-MASK 4278190080) 

(DEFCONSTANT FI-RGBA-RED-SHIFT 16) 

(DEFCONSTANT FI-RGBA-GREEN-SHIFT 8) 

(DEFCONSTANT FI-RGBA-BLUE-SHIFT 0) 

(DEFCONSTANT FI-RGBA-ALPHA-SHIFT 24) 

(DEFCONSTANT FI-RGBA-RGB-MASK (LOGIOR 16711680 65280 255)) 

(DEFCONSTANT FI16-555-RED-MASK 31744) 

(DEFCONSTANT FI16-555-GREEN-MASK 992) 

(DEFCONSTANT FI16-555-BLUE-MASK 31) 

(DEFCONSTANT FI16-555-RED-SHIFT 10) 

(DEFCONSTANT FI16-555-GREEN-SHIFT 5) 

(DEFCONSTANT FI16-555-BLUE-SHIFT 0) 

(DEFCONSTANT FI16-565-RED-MASK 63488) 

(DEFCONSTANT FI16-565-GREEN-MASK 2016) 

(DEFCONSTANT FI16-565-BLUE-MASK 31) 

(DEFCONSTANT FI16-565-RED-SHIFT 11) 

(DEFCONSTANT FI16-565-GREEN-SHIFT 5) 

(DEFCONSTANT FI16-565-BLUE-SHIFT 0) 

(DEFCONSTANT FIICC-DEFAULT 0) 

(DEFCONSTANT FIICC-COLOR-IS-CMYK 1) 

(CFFI:DEFCSTRUCT FIICCPROFILE (FLAGS :POINTER) (SIZE :POINTER) (DATA :POINTER)) 

(CFFI:DEFCSTRUCT FIMETADATA (DATA :POINTER)) 

(CFFI:DEFCSTRUCT FITAG (DATA :POINTER)) 

(CFFI:DEFCSTRUCT FREEIMAGEIO (READ_PROC :POINTER) (WRITE_PROC :POINTER)
                 (SEEK_PROC :POINTER) (TELL_PROC :POINTER)) 

(CFFI:DEFCSTRUCT FIMEMORY (DATA :POINTER)) 

(CFFI:DEFCSTRUCT PLUGIN (FORMAT_PROC :POINTER) (DESCRIPTION_PROC :POINTER)
                 (EXTENSION_PROC :POINTER) (REGEXPR_PROC :POINTER)
                 (OPEN_PROC :POINTER) (CLOSE_PROC :POINTER)
                 (PAGECOUNT_PROC :POINTER) (PAGECAPABILITY_PROC :POINTER)
                 (LOAD_PROC :POINTER) (SAVE_PROC :POINTER)
                 (VALIDATE_PROC :POINTER) (MIME_PROC :POINTER)
                 (SUPPORTS_EXPORT_BPP_PROC :POINTER)
                 (SUPPORTS_EXPORT_TYPE_PROC :POINTER)
                 (SUPPORTS_ICC_PROFILES_PROC :POINTER)) 

(DEFCONSTANT BMP-DEFAULT 0) 

(DEFCONSTANT BMP-SAVE-RLE 1) 

(DEFCONSTANT CUT-DEFAULT 0) 

(DEFCONSTANT DDS-DEFAULT 0) 

(DEFCONSTANT EXR-DEFAULT 0) 

(DEFCONSTANT EXR-FLOAT 1) 

(DEFCONSTANT EXR-NONE 2) 

(DEFCONSTANT EXR-ZIP 4) 

(DEFCONSTANT EXR-PIZ 8) 

(DEFCONSTANT EXR-PXR24 16) 

(DEFCONSTANT EXR-B44 32) 

(DEFCONSTANT EXR-LC 64) 

(DEFCONSTANT FAXG3-DEFAULT 0) 

(DEFCONSTANT GIF-DEFAULT 0) 

(DEFCONSTANT GIF-LOAD256 1) 

(DEFCONSTANT GIF-PLAYBACK 2) 

(DEFCONSTANT HDR-DEFAULT 0) 

(DEFCONSTANT ICO-DEFAULT 0) 

(DEFCONSTANT ICO-MAKEALPHA 1) 

(DEFCONSTANT IFF-DEFAULT 0) 

(DEFCONSTANT J2K-DEFAULT 0) 

(DEFCONSTANT JP2-DEFAULT 0) 

(DEFCONSTANT JPEG-DEFAULT 0) 

(DEFCONSTANT JPEG-FAST 1) 

(DEFCONSTANT JPEG-ACCURATE 2) 

(DEFCONSTANT JPEG-CMYK 4) 

(DEFCONSTANT JPEG-EXIFROTATE 8) 

(DEFCONSTANT JPEG-QUALITYSUPERB 128) 

(DEFCONSTANT JPEG-QUALITYGOOD 256) 

(DEFCONSTANT JPEG-QUALITYNORMAL 512) 

(DEFCONSTANT JPEG-QUALITYAVERAGE 1024) 

(DEFCONSTANT JPEG-QUALITYBAD 2048) 

(DEFCONSTANT JPEG-PROGRESSIVE 8192) 

(DEFCONSTANT JPEG-SUBSAMPLING-411 4096) 

(DEFCONSTANT JPEG-SUBSAMPLING-420 16384) 

(DEFCONSTANT JPEG-SUBSAMPLING-422 32768) 

(DEFCONSTANT JPEG-SUBSAMPLING-444 65536) 

(DEFCONSTANT KOALA-DEFAULT 0) 

(DEFCONSTANT LBM-DEFAULT 0) 

(DEFCONSTANT MNG-DEFAULT 0) 

(DEFCONSTANT PCD-DEFAULT 0) 

(DEFCONSTANT PCD-BASE 1) 

(DEFCONSTANT PCD-BASEDIV4 2) 

(DEFCONSTANT PCD-BASEDIV16 3) 

(DEFCONSTANT PCX-DEFAULT 0) 

(DEFCONSTANT PFM-DEFAULT 0) 

(DEFCONSTANT PICT-DEFAULT 0) 

(DEFCONSTANT PNG-DEFAULT 0) 

(DEFCONSTANT PNG-IGNOREGAMMA 1) 

(DEFCONSTANT PNG-Z-BEST-SPEED 1) 

(DEFCONSTANT PNG-Z-DEFAULT-COMPRESSION 6) 

(DEFCONSTANT PNG-Z-BEST-COMPRESSION 9) 

(DEFCONSTANT PNG-Z-NO-COMPRESSION 256) 

(DEFCONSTANT PNG-INTERLACED 512) 

(DEFCONSTANT PNM-DEFAULT 0) 

(DEFCONSTANT PNM-SAVE-RAW 0) 

(DEFCONSTANT PNM-SAVE-ASCII 1) 

(DEFCONSTANT PSD-DEFAULT 0) 

(DEFCONSTANT RAS-DEFAULT 0) 

(DEFCONSTANT RAW-DEFAULT 0) 

(DEFCONSTANT RAW-PREVIEW 1) 

(DEFCONSTANT RAW-DISPLAY 2) 

(DEFCONSTANT SGI-DEFAULT 0) 

(DEFCONSTANT TARGA-DEFAULT 0) 

(DEFCONSTANT TARGA-LOAD-RGB888 1) 

(DEFCONSTANT TIFF-DEFAULT 0) 

(DEFCONSTANT TIFF-CMYK 1) 

(DEFCONSTANT TIFF-PACKBITS 256) 

(DEFCONSTANT TIFF-DEFLATE 512) 

(DEFCONSTANT TIFF-ADOBE-DEFLATE 1024) 

(DEFCONSTANT TIFF-NONE 2048) 

(DEFCONSTANT TIFF-CCITTFAX3 4096) 

(DEFCONSTANT TIFF-CCITTFAX4 8192) 

(DEFCONSTANT TIFF-LZW 16384) 

(DEFCONSTANT TIFF-JPEG 32768) 

(DEFCONSTANT WBMP-DEFAULT 0) 

(DEFCONSTANT XBM-DEFAULT 0) 

(DEFCONSTANT XPM-DEFAULT 0) 

(DEFCONSTANT FI-COLOR-IS-RGB-COLOR 0) 

(DEFCONSTANT FI-COLOR-IS-RGBA-COLOR 1) 

(DEFCONSTANT FI-COLOR-FIND-EQUAL-COLOR 2) 

(DEFCONSTANT FI-COLOR-ALPHA-IS-INDEX 4) 

(DEFCONSTANT FI-COLOR-PALETTE-SEARCH-MASK (LOGIOR 2 4)) 

(cffi:defcenum free-image-filter
  (:FILTER-BOX 0)
  (:FILTER-BICUBIC 1)
  (:FILTER-BILINEAR 2)
  (:FILTER-BSPLINE 3)
  (:FILTER-CATMULLROM 4)
  (:FILTER-LANCZOS3 5))


(CFFI:DEFCENUM FREE-IMAGE-FORMAT (:FIF-UNKNOWN -1) (:FIF-BMP 0) (:FIF-ICO 1)
               (:FIF-JPEG 2) (:FIF-JNG 3) (:FIF-KOALA 4) (:FIF-LBM 5)
               (:FIF-IFF 5) (:FIF-MNG 6) (:FIF-PBM 7) (:FIF-PBMRAW 8)
               (:FIF-PCD 9) (:FIF-PCX 10) (:FIF-PGM 11) (:FIF-PGMRAW 12)
               (:FIF-PNG 13) (:FIF-PPM 14) (:FIF-PPMRAW 15) (:FIF-RAS 16)
               (:FIF-TARGA 17) (:FIF-TIFF 18) (:FIF-WBMP 19) (:FIF-PSD 20)
               (:FIF-CUT 21) (:FIF-XBM 22) (:FIF-XPM 23) (:FIF-DDS 24)
               (:FIF-GIF 25) (:FIF-HDR 26) (:FIF-FAXG3 27) (:FIF-SGI 28)
               (:FIF-EXR 29) (:FIF-J2K 30) (:FIF-JP2 31) (:FIF-PFM 32)
               (:FIF-PICT 33) (:FIF-RAW 34)) 

(CFFI:DEFCENUM FREE-IMAGE-MDMODEL
  (:FIMD-NODATA -1)
  (:FIMD-COMMENTS 0)	;; single comment or keywords
  (:FIMD-EXIF-MAIN 1)	;; Exif-TIFF metadata
  (:FIMD-EXIF-EXIF 2)	;; Exif-specific metadata
  (:FIMD-EXIF-GPS 3)	;; Exif GPS metadata
  (:FIMD-EXIF-MAKERNOTE 4)	;; Exif maker note metadata
  (:FIMD-EXIF-INTEROP 5)	;; Exif interoperability metadata
  (:FIMD-IPTC 6)	;; IPTC/NAA metadata
  (:FIMD-XMP 7)	;; Abobe XMP metadata
  (:FIMD-GEOTIFF	 8)	;; GeoTIFF metadata
  (:FIMD-ANIMATION  9)	;; Animation metadata
  (:FIMD-CUSTOM	10)	;; Used to attach other metadata types to a dib
  (:FIMD-EXIF-RAW  11))	;; Exif metadata as a raw buffer



(CFFI:DEFCFUN ("FreeImage_Initialise" FREEIMAGE-INITIALISE) :VOID
              (LOAD_LOCAL_PLUGINS_ONLY :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_DeInitialise" FREEIMAGE-DEINITIALISE) :VOID) 

(CFFI:DEFCFUN ("FreeImage_GetVersion" FREEIMAGE-GETVERSION) :STRING) 

(CFFI:DEFCFUN ("FreeImage_GetCopyrightMessage" FREEIMAGE-GETCOPYRIGHTMESSAGE)
              :STRING) 

(CFFI:DEFCFUN
 ("FreeImage_SetOutputMessageStdCall" FREEIMAGE-SETOUTPUTMESSAGESTDCALL) :VOID
 (OMF :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetOutputMessage" FREEIMAGE-SETOUTPUTMESSAGE) :VOID
              (OMF :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_OutputMessageProc" FREEIMAGE-OUTPUTMESSAGEPROC) :VOID
              (FIF :INT) (FMT :STRING) &REST) 

(CFFI:DEFCFUN ("FreeImage_Allocate" FREEIMAGE-ALLOCATE) :POINTER (WIDTH :INT)
              (HEIGHT :INT) (BPP :INT) (RED_MASK :UNSIGNED-INT)
              (GREEN_MASK :UNSIGNED-INT) (BLUE_MASK :UNSIGNED-INT)) 

(CFFI:DEFCFUN ("FreeImage_AllocateT" FREEIMAGE-ALLOCATET) :POINTER (TYPE :INT)
              (WIDTH :INT) (HEIGHT :INT) (BPP :INT) (RED_MASK :UNSIGNED-INT)
              (GREEN_MASK :UNSIGNED-INT) (BLUE_MASK :UNSIGNED-INT)) 

(CFFI:DEFCFUN ("FreeImage_Clone" FREEIMAGE-CLONE) :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_Unload" FREEIMAGE-UNLOAD) :VOID (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_Load" FREEIMAGE-LOAD) :POINTER
              (FIF FREE-IMAGE-FORMAT) (FILENAME :STRING) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_LoadU" FREEIMAGE-LOADU) :POINTER (FIF :INT)
              (FILENAME :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_LoadFromHandle" FREEIMAGE-LOADFROMHANDLE) :POINTER
              (FIF :INT) (IO :POINTER) (HANDLE :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_Save" FREEIMAGE-SAVE) :POINTER (FIF FREE-IMAGE-FORMAT)
              (DIB :POINTER) (FILENAME :STRING) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_SaveU" FREEIMAGE-SAVEU) :POINTER (FIF FREE-IMAGE-FORMAT)
              (DIB :POINTER) (FILENAME :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_SaveToHandle" FREEIMAGE-SAVETOHANDLE) :POINTER
              (FIF FREE-IMAGE-FORMAT) (DIB :POINTER) (IO :POINTER) (HANDLE :POINTER)
              (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_OpenMemory" FREEIMAGE-OPENMEMORY) :POINTER
              (DATA :POINTER) (SIZE_IN_BYTES :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_CloseMemory" FREEIMAGE-CLOSEMEMORY) :VOID
              (STREAM :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_LoadFromMemory" FREEIMAGE-LOADFROMMEMORY) :POINTER
              (FIF :INT) (STREAM :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_SaveToMemory" FREEIMAGE-SAVETOMEMORY) :POINTER
              (FIF :INT) (DIB :POINTER) (STREAM :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_TellMemory" FREEIMAGE-TELLMEMORY) :LONG
              (STREAM :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SeekMemory" FREEIMAGE-SEEKMEMORY) :POINTER
              (STREAM :POINTER) (OFFSET :LONG) (ORIGIN :INT)) 

(CFFI:DEFCFUN ("FreeImage_AcquireMemory" FREEIMAGE-ACQUIREMEMORY) :POINTER
              (STREAM :POINTER) (DATA :POINTER) (SIZE_IN_BYTES :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ReadMemory" FREEIMAGE-READMEMORY) :UNSIGNED-INT
              (BUFFER :POINTER) (SIZE :UNSIGNED-INT) (COUNT :UNSIGNED-INT)
              (STREAM :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_WriteMemory" FREEIMAGE-WRITEMEMORY) :UNSIGNED-INT
              (BUFFER :POINTER) (SIZE :UNSIGNED-INT) (COUNT :UNSIGNED-INT)
              (STREAM :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_LoadMultiBitmapFromMemory" FREEIMAGE-LOADMULTIBITMAPFROMMEMORY)
 :POINTER (FIF :INT) (STREAM :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_RegisterLocalPlugin" FREEIMAGE-REGISTERLOCALPLUGIN)
              :INT (PROC_ADDRESS :POINTER) (FORMAT :STRING)
              (DESCRIPTION :STRING) (EXTENSION :STRING) (REGEXPR :STRING)) 

(CFFI:DEFCFUN
 ("FreeImage_RegisterExternalPlugin" FREEIMAGE-REGISTEREXTERNALPLUGIN) :INT
 (PATH :STRING) (FORMAT :STRING) (DESCRIPTION :STRING) (EXTENSION :STRING)
 (REGEXPR :STRING)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFCount" FREEIMAGE-GETFIFCOUNT) :INT) 

(CFFI:DEFCFUN ("FreeImage_SetPluginEnabled" FREEIMAGE-SETPLUGINENABLED) :INT
              (FIF :INT) (ENABLE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_IsPluginEnabled" FREEIMAGE-ISPLUGINENABLED) :INT
              (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFFromFormat" FREEIMAGE-GETFIFFROMFORMAT) :INT
              (FORMAT :STRING)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFFromMime" FREEIMAGE-GETFIFFROMMIME) :INT
              (MIME :STRING)) 

(CFFI:DEFCFUN ("FreeImage_GetFormatFromFIF" FREEIMAGE-GETFORMATFROMFIF) :STRING
              (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFExtensionList" FREEIMAGE-GETFIFEXTENSIONLIST)
              :STRING (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFDescription" FREEIMAGE-GETFIFDESCRIPTION)
              :STRING (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFRegExpr" FREEIMAGE-GETFIFREGEXPR) :STRING
              (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFMimeType" FREEIMAGE-GETFIFMIMETYPE) :STRING
              (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFFromFilename" FREEIMAGE-GETFIFFROMFILENAME)
              :INT (FILENAME :STRING)) 

(CFFI:DEFCFUN ("FreeImage_GetFIFFromFilenameU" FREEIMAGE-GETFIFFROMFILENAMEU)
              :INT (FILENAME :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FIFSupportsReading" FREEIMAGE-FIFSUPPORTSREADING)
              :POINTER (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_FIFSupportsWriting" FREEIMAGE-FIFSUPPORTSWRITING)
              :POINTER (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_FIFSupportsExportBPP" FREEIMAGE-FIFSUPPORTSEXPORTBPP)
              :POINTER (FIF :INT) (BPP :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_FIFSupportsExportType" FREEIMAGE-FIFSUPPORTSEXPORTTYPE) :POINTER
 (FIF :INT) (TYPE :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_FIFSupportsICCProfiles" FREEIMAGE-FIFSUPPORTSICCPROFILES) :POINTER
 (FIF :INT)) 

(CFFI:DEFCFUN ("FreeImage_OpenMultiBitmap" FREEIMAGE-OPENMULTIBITMAP) :POINTER
              (FIF :INT) (FILENAME :STRING) (CREATE_NEW :INT)
              (READ_ONLY :INT) (KEEP_CACHE_IN_MEMORY :INT) (FLAGS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_OpenMultiBitmapFromHandle" FREEIMAGE-OPENMULTIBITMAPFROMHANDLE)
 :POINTER (FIF :INT) (IO :POINTER) (HANDLE :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_CloseMultiBitmap" FREEIMAGE-CLOSEMULTIBITMAP)
              :POINTER (BITMAP :POINTER) (FLAGS :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetPageCount" FREEIMAGE-GETPAGECOUNT) :INT
              (BITMAP :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_AppendPage" FREEIMAGE-APPENDPAGE) :VOID
              (BITMAP :POINTER) (DATA :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_InsertPage" FREEIMAGE-INSERTPAGE) :VOID
              (BITMAP :POINTER) (PAGE :INT) (DATA :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_DeletePage" FREEIMAGE-DELETEPAGE) :VOID
              (BITMAP :POINTER) (PAGE :INT)) 

(CFFI:DEFCFUN ("FreeImage_LockPage" FREEIMAGE-LOCKPAGE) :POINTER
              (BITMAP :POINTER) (PAGE :INT)) 

(CFFI:DEFCFUN ("FreeImage_UnlockPage" FREEIMAGE-UNLOCKPAGE) :VOID
              (BITMAP :POINTER) (DATA :POINTER) (CHANGED :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_MovePage" FREEIMAGE-MOVEPAGE) :POINTER
              (BITMAP :POINTER) (TARGET :INT) (SOURCE :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetLockedPageNumbers" FREEIMAGE-GETLOCKEDPAGENUMBERS)
              :POINTER (BITMAP :POINTER) (PAGES :POINTER) (COUNT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetFileType" FREEIMAGE-GETFILETYPE) FREE-IMAGE-FORMAT
              (FILENAME :STRING) (SIZE :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetFileTypeU" FREEIMAGE-GETFILETYPEU) :INT
              (FILENAME :POINTER) (SIZE :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_GetFileTypeFromHandle" FREEIMAGE-GETFILETYPEFROMHANDLE) :INT
 (IO :POINTER) (HANDLE :POINTER) (SIZE :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_GetFileTypeFromMemory" FREEIMAGE-GETFILETYPEFROMMEMORY) :INT
 (STREAM :POINTER) (SIZE :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetImageType" FREEIMAGE-GETIMAGETYPE) :INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_IsLittleEndian" FREEIMAGE-ISLITTLEENDIAN) :POINTER) 

(CFFI:DEFCFUN ("FreeImage_LookupX11Color" FREEIMAGE-LOOKUPX11COLOR) :POINTER
              (SZCOLOR :STRING) (NRED :POINTER) (NGREEN :POINTER)
              (NBLUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_LookupSVGColor" FREEIMAGE-LOOKUPSVGCOLOR) :POINTER
              (SZCOLOR :STRING) (NRED :POINTER) (NGREEN :POINTER)
              (NBLUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetBits" FREEIMAGE-GETBITS) :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetScanLine" FREEIMAGE-GETSCANLINE) :POINTER
              (DIB :POINTER) (SCANLINE :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetPixelIndex" FREEIMAGE-GETPIXELINDEX) :POINTER
              (DIB :POINTER) (X :UNSIGNED-INT) (Y :UNSIGNED-INT)
              (VALUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetPixelColor" FREEIMAGE-GETPIXELCOLOR) :POINTER
              (DIB :POINTER) (X :UNSIGNED-INT) (Y :UNSIGNED-INT)
              (VALUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetPixelIndex" FREEIMAGE-SETPIXELINDEX) :POINTER
              (DIB :POINTER) (X :UNSIGNED-INT) (Y :UNSIGNED-INT)
              (VALUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetPixelColor" FREEIMAGE-SETPIXELCOLOR) :POINTER
              (DIB :POINTER) (X :UNSIGNED-INT) (Y :UNSIGNED-INT)
              (VALUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetColorsUsed" FREEIMAGE-GETCOLORSUSED) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetBPP" FREEIMAGE-GETBPP) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetWidth" FREEIMAGE-GETWIDTH) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetHeight" FREEIMAGE-GETHEIGHT) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetLine" FREEIMAGE-GETLINE) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetPitch" FREEIMAGE-GETPITCH) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetDIBSize" FREEIMAGE-GETDIBSIZE) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetPalette" FREEIMAGE-GETPALETTE) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetDotsPerMeterX" FREEIMAGE-GETDOTSPERMETERX)
              :UNSIGNED-INT (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetDotsPerMeterY" FREEIMAGE-GETDOTSPERMETERY)
              :UNSIGNED-INT (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetDotsPerMeterX" FREEIMAGE-SETDOTSPERMETERX) :VOID
              (DIB :POINTER) (RES :UNSIGNED-INT)) 

(CFFI:DEFCFUN ("FreeImage_SetDotsPerMeterY" FREEIMAGE-SETDOTSPERMETERY) :VOID
              (DIB :POINTER) (RES :UNSIGNED-INT)) 

(CFFI:DEFCFUN ("FreeImage_GetInfoHeader" FREEIMAGE-GETINFOHEADER) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetInfo" FREEIMAGE-GETINFO) :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetColorType" FREEIMAGE-GETCOLORTYPE) :INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetRedMask" FREEIMAGE-GETREDMASK) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetGreenMask" FREEIMAGE-GETGREENMASK) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetBlueMask" FREEIMAGE-GETBLUEMASK) :UNSIGNED-INT
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTransparencyCount" FREEIMAGE-GETTRANSPARENCYCOUNT)
              :UNSIGNED-INT (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTransparencyTable" FREEIMAGE-GETTRANSPARENCYTABLE)
              :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTransparent" FREEIMAGE-SETTRANSPARENT) :VOID
              (DIB :POINTER) (ENABLED :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTransparencyTable" FREEIMAGE-SETTRANSPARENCYTABLE)
              :VOID (DIB :POINTER) (TABLE :POINTER) (COUNT :INT)) 

(CFFI:DEFCFUN ("FreeImage_IsTransparent" FREEIMAGE-ISTRANSPARENT) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTransparentIndex" FREEIMAGE-SETTRANSPARENTINDEX)
              :VOID (DIB :POINTER) (INDEX :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetTransparentIndex" FREEIMAGE-GETTRANSPARENTINDEX)
              :INT (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_HasBackgroundColor" FREEIMAGE-HASBACKGROUNDCOLOR)
              :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetBackgroundColor" FREEIMAGE-GETBACKGROUNDCOLOR)
              :POINTER (DIB :POINTER) (BKCOLOR :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetBackgroundColor" FREEIMAGE-SETBACKGROUNDCOLOR)
              :POINTER (DIB :POINTER) (BKCOLOR :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetICCProfile" FREEIMAGE-GETICCPROFILE) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_CreateICCProfile" FREEIMAGE-CREATEICCPROFILE)
              :POINTER (DIB :POINTER) (DATA :POINTER) (SIZE :LONG)) 

(CFFI:DEFCFUN ("FreeImage_DestroyICCProfile" FREEIMAGE-DESTROYICCPROFILE) :VOID
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine1To4" FREEIMAGE-CONVERTLINE1TO4) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine8To4" FREEIMAGE-CONVERTLINE8TO4) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine16To4_555" FREEIMAGE-CONVERTLINE16TO4-555)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine16To4_565" FREEIMAGE-CONVERTLINE16TO4-565)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine24To4" FREEIMAGE-CONVERTLINE24TO4) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine32To4" FREEIMAGE-CONVERTLINE32TO4) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine1To8" FREEIMAGE-CONVERTLINE1TO8) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine4To8" FREEIMAGE-CONVERTLINE4TO8) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine16To8_555" FREEIMAGE-CONVERTLINE16TO8-555)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine16To8_565" FREEIMAGE-CONVERTLINE16TO8-565)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine24To8" FREEIMAGE-CONVERTLINE24TO8) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine32To8" FREEIMAGE-CONVERTLINE32TO8) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine1To16_555" FREEIMAGE-CONVERTLINE1TO16-555)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine4To16_555" FREEIMAGE-CONVERTLINE4TO16-555)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine8To16_555" FREEIMAGE-CONVERTLINE8TO16-555)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine16_565_To16_555" FREEIMAGE-CONVERTLINE16-565-TO16-555)
 :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine24To16_555" FREEIMAGE-CONVERTLINE24TO16-555) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine32To16_555" FREEIMAGE-CONVERTLINE32TO16-555) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine1To16_565" FREEIMAGE-CONVERTLINE1TO16-565)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine4To16_565" FREEIMAGE-CONVERTLINE4TO16-565)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine8To16_565" FREEIMAGE-CONVERTLINE8TO16-565)
              :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine16_555_To16_565" FREEIMAGE-CONVERTLINE16-555-TO16-565)
 :VOID (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine24To16_565" FREEIMAGE-CONVERTLINE24TO16-565) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine32To16_565" FREEIMAGE-CONVERTLINE32TO16-565) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine1To24" FREEIMAGE-CONVERTLINE1TO24) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine4To24" FREEIMAGE-CONVERTLINE4TO24) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine8To24" FREEIMAGE-CONVERTLINE8TO24) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine16To24_555" FREEIMAGE-CONVERTLINE16TO24-555) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine16To24_565" FREEIMAGE-CONVERTLINE16TO24-565) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine32To24" FREEIMAGE-CONVERTLINE32TO24) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine1To32" FREEIMAGE-CONVERTLINE1TO32) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine4To32" FREEIMAGE-CONVERTLINE4TO32) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine8To32" FREEIMAGE-CONVERTLINE8TO32) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)
              (PALETTE :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine16To32_555" FREEIMAGE-CONVERTLINE16TO32-555) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertLine16To32_565" FREEIMAGE-CONVERTLINE16TO32-565) :VOID
 (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertLine24To32" FREEIMAGE-CONVERTLINE24TO32) :VOID
              (TARGET :POINTER) (SOURCE :POINTER) (WIDTH_IN_PIXELS :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertTo4Bits" FREEIMAGE-CONVERTTO4BITS) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertTo8Bits" FREEIMAGE-CONVERTTO8BITS) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertToGreyscale" FREEIMAGE-CONVERTTOGREYSCALE)
              :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertTo16Bits555" FREEIMAGE-CONVERTTO16BITS555)
              :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertTo16Bits565" FREEIMAGE-CONVERTTO16BITS565)
              :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertTo24Bits" FREEIMAGE-CONVERTTO24BITS) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertTo32Bits" FREEIMAGE-CONVERTTO32BITS) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ColorQuantize" FREEIMAGE-COLORQUANTIZE) :POINTER
              (DIB :POINTER) (QUANTIZE :INT)) 

(CFFI:DEFCFUN ("FreeImage_ColorQuantizeEx" FREEIMAGE-COLORQUANTIZEEX) :POINTER
              (DIB :POINTER) (QUANTIZE :INT) (PALETTESIZE :INT)
              (RESERVESIZE :INT) (RESERVEPALETTE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_Threshold" FREEIMAGE-THRESHOLD) :POINTER
              (DIB :POINTER) (T_ARG1 :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_Dither" FREEIMAGE-DITHER) :POINTER (DIB :POINTER)
              (ALGORITHM :INT)) 

(CFFI:DEFCFUN ("FreeImage_ConvertFromRawBits" FREEIMAGE-CONVERTFROMRAWBITS)
              :POINTER (BITS :POINTER) (WIDTH :INT) (HEIGHT :INT) (PITCH :INT)
              (BPP :UNSIGNED-INT) (RED_MASK :UNSIGNED-INT)
              (GREEN_MASK :UNSIGNED-INT) (BLUE_MASK :UNSIGNED-INT)
              (TOPDOWN :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertToRawBits" FREEIMAGE-CONVERTTORAWBITS) :VOID
              (BITS :POINTER) (DIB :POINTER) (PITCH :INT) (BPP :UNSIGNED-INT)
              (RED_MASK :UNSIGNED-INT) (GREEN_MASK :UNSIGNED-INT)
              (BLUE_MASK :UNSIGNED-INT) (TOPDOWN :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertToRGBF" FREEIMAGE-CONVERTTORGBF) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_ConvertToStandardType" FREEIMAGE-CONVERTTOSTANDARDTYPE) :POINTER
 (SRC :POINTER) (SCALE_LINEAR :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ConvertToType" FREEIMAGE-CONVERTTOTYPE) :POINTER
              (SRC :POINTER) (DST_TYPE :INT) (SCALE_LINEAR :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ToneMapping" FREEIMAGE-TONEMAPPING) :POINTER
              (DIB :POINTER) (TMO :INT) (FIRST_PARAM :DOUBLE)
              (SECOND_PARAM :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_TmoDrago03" FREEIMAGE-TMODRAGO03) :POINTER
              (SRC :POINTER) (GAMMA :DOUBLE) (EXPOSURE :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_TmoReinhard05" FREEIMAGE-TMOREINHARD05) :POINTER
              (SRC :POINTER) (INTENSITY :DOUBLE) (CONTRAST :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_TmoReinhard05Ex" FREEIMAGE-TMOREINHARD05EX) :POINTER
              (SRC :POINTER) (INTENSITY :DOUBLE) (CONTRAST :DOUBLE)
              (ADAPTATION :DOUBLE) (COLOR_CORRECTION :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_TmoFattal02" FREEIMAGE-TMOFATTAL02) :POINTER
              (SRC :POINTER) (COLOR_SATURATION :DOUBLE) (ATTENUATION :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_ZLibCompress" FREEIMAGE-ZLIBCOMPRESS) :POINTER
              (TARGET :POINTER) (TARGET_SIZE :POINTER) (SOURCE :POINTER)
              (SOURCE_SIZE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ZLibUncompress" FREEIMAGE-ZLIBUNCOMPRESS) :POINTER
              (TARGET :POINTER) (TARGET_SIZE :POINTER) (SOURCE :POINTER)
              (SOURCE_SIZE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ZLibGZip" FREEIMAGE-ZLIBGZIP) :POINTER
              (TARGET :POINTER) (TARGET_SIZE :POINTER) (SOURCE :POINTER)
              (SOURCE_SIZE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ZLibGUnzip" FREEIMAGE-ZLIBGUNZIP) :POINTER
              (TARGET :POINTER) (TARGET_SIZE :POINTER) (SOURCE :POINTER)
              (SOURCE_SIZE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ZLibCRC32" FREEIMAGE-ZLIBCRC32) :POINTER
              (CRC :POINTER) (SOURCE :POINTER) (SOURCE_SIZE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_CreateTag" FREEIMAGE-CREATETAG) :POINTER) 

(CFFI:DEFCFUN ("FreeImage_DeleteTag" FREEIMAGE-DELETETAG) :VOID (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_CloneTag" FREEIMAGE-CLONETAG) :POINTER (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagKey" FREEIMAGE-GETTAGKEY) :STRING
              (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagDescription" FREEIMAGE-GETTAGDESCRIPTION)
              :STRING (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagID" FREEIMAGE-GETTAGID) :POINTER (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagType" FREEIMAGE-GETTAGTYPE) :INT (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagCount" FREEIMAGE-GETTAGCOUNT) :POINTER
              (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagLength" FREEIMAGE-GETTAGLENGTH) :POINTER
              (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetTagValue" FREEIMAGE-GETTAGVALUE) :POINTER
              (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTagKey" FREEIMAGE-SETTAGKEY) :POINTER
              (TAG :POINTER) (KEY :STRING)) 

(CFFI:DEFCFUN ("FreeImage_SetTagDescription" FREEIMAGE-SETTAGDESCRIPTION)
              :POINTER (TAG :POINTER) (DESCRIPTION :STRING)) 

(CFFI:DEFCFUN ("FreeImage_SetTagID" FREEIMAGE-SETTAGID) :POINTER (TAG :POINTER)
              (ID :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTagType" FREEIMAGE-SETTAGTYPE) :POINTER
              (TAG :POINTER) (TYPE :INT)) 

(CFFI:DEFCFUN ("FreeImage_SetTagCount" FREEIMAGE-SETTAGCOUNT) :POINTER
              (TAG :POINTER) (COUNT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTagLength" FREEIMAGE-SETTAGLENGTH) :POINTER
              (TAG :POINTER) (LENGTH :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetTagValue" FREEIMAGE-SETTAGVALUE) :POINTER
              (TAG :POINTER) (VALUE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FindFirstMetadata" FREEIMAGE-FINDFIRSTMETADATA)
              :POINTER (MODEL :INT) (DIB :POINTER) (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FindNextMetadata" FREEIMAGE-FINDNEXTMETADATA)
              :POINTER (MDHANDLE :POINTER) (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FindCloseMetadata" FREEIMAGE-FINDCLOSEMETADATA) :VOID
              (MDHANDLE :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SetMetadata" FREEIMAGE-SETMETADATA) :POINTER
              (MODEL :INT) (DIB :POINTER) (KEY :STRING) (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetMetadata" FREEIMAGE-GETMETADATA) :POINTER
              (MODEL :INT) (DIB :POINTER) (KEY :STRING) (TAG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetMetadataCount" FREEIMAGE-GETMETADATACOUNT)
              :UNSIGNED-INT (MODEL :INT) (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_CloneMetadata" FREEIMAGE-CLONEMETADATA) :POINTER
              (DST :POINTER) (SRC :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_TagToString" FREEIMAGE-TAGTOSTRING) :STRING
              (MODEL :INT) (TAG :POINTER) (MAKE :STRING)) 

(CFFI:DEFCFUN ("FreeImage_RotateClassic" FREEIMAGE-ROTATECLASSIC) :POINTER
              (DIB :POINTER) (ANGLE :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_Rotate" FREEIMAGE-ROTATE) :POINTER (DIB :POINTER)
              (ANGLE :DOUBLE) (BKCOLOR :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_RotateEx" FREEIMAGE-ROTATEEX) :POINTER (DIB :POINTER)
              (ANGLE :DOUBLE) (X_SHIFT :DOUBLE) (Y_SHIFT :DOUBLE)
              (X_ORIGIN :DOUBLE) (Y_ORIGIN :DOUBLE) (USE_MASK :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FlipHorizontal" FREEIMAGE-FLIPHORIZONTAL) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FlipVertical" FREEIMAGE-FLIPVERTICAL) :POINTER
              (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_JPEGTransform" FREEIMAGE-JPEGTRANSFORM) :POINTER
              (SRC_FILE :STRING) (DST_FILE :STRING) (OPERATION :INT)
              (PERFECT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_JPEGTransformU" FREEIMAGE-JPEGTRANSFORMU) :POINTER
              (SRC_FILE :POINTER) (DST_FILE :POINTER) (OPERATION :INT)
              (PERFECT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_Rescale" FREEIMAGE-RESCALE) :POINTER (DIB :POINTER)
              (DST_WIDTH :INT) (DST_HEIGHT :INT) (FILTER free-image-filter)) 

(CFFI:DEFCFUN ("FreeImage_MakeThumbnail" FREEIMAGE-MAKETHUMBNAIL) :POINTER
              (DIB :POINTER) (MAX_PIXEL_SIZE :INT) (CONVERT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_AdjustCurve" FREEIMAGE-ADJUSTCURVE) :POINTER
              (DIB :POINTER) (LUT :POINTER) (CHANNEL :INT)) 

(CFFI:DEFCFUN ("FreeImage_AdjustGamma" FREEIMAGE-ADJUSTGAMMA) :POINTER
              (DIB :POINTER) (GAMMA :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_AdjustBrightness" FREEIMAGE-ADJUSTBRIGHTNESS)
              :POINTER (DIB :POINTER) (PERCENTAGE :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_AdjustContrast" FREEIMAGE-ADJUSTCONTRAST) :POINTER
              (DIB :POINTER) (PERCENTAGE :DOUBLE)) 

(CFFI:DEFCFUN ("FreeImage_Invert" FREEIMAGE-INVERT) :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetHistogram" FREEIMAGE-GETHISTOGRAM) :POINTER
              (DIB :POINTER) (HISTO :POINTER) (CHANNEL :INT)) 

(CFFI:DEFCFUN
 ("FreeImage_GetAdjustColorsLookupTable" FREEIMAGE-GETADJUSTCOLORSLOOKUPTABLE)
 :INT (LUT :POINTER) (BRIGHTNESS :DOUBLE) (CONTRAST :DOUBLE) (GAMMA :DOUBLE)
 (INVERT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_AdjustColors" FREEIMAGE-ADJUSTCOLORS) :POINTER
              (DIB :POINTER) (BRIGHTNESS :DOUBLE) (CONTRAST :DOUBLE)
              (GAMMA :DOUBLE) (INVERT :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_ApplyColorMapping" FREEIMAGE-APPLYCOLORMAPPING)
              :UNSIGNED-INT (DIB :POINTER) (SRCCOLORS :POINTER)
              (DSTCOLORS :POINTER) (COUNT :UNSIGNED-INT)
              (IGNORE_ALPHA :POINTER) (SWAP :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SwapColors" FREEIMAGE-SWAPCOLORS) :UNSIGNED-INT
              (DIB :POINTER) (COLOR_A :POINTER) (COLOR_B :POINTER)
              (IGNORE_ALPHA :POINTER)) 

(CFFI:DEFCFUN
 ("FreeImage_ApplyPaletteIndexMapping" FREEIMAGE-APPLYPALETTEINDEXMAPPING)
 :UNSIGNED-INT (DIB :POINTER) (SRCINDICES :POINTER) (DSTINDICES :POINTER)
 (COUNT :UNSIGNED-INT) (SWAP :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_SwapPaletteIndices" FREEIMAGE-SWAPPALETTEINDICES)
              :UNSIGNED-INT (DIB :POINTER) (INDEX_A :POINTER)
              (INDEX_B :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_GetChannel" FREEIMAGE-GETCHANNEL) :POINTER
              (DIB :POINTER) (CHANNEL :INT)) 

(CFFI:DEFCFUN ("FreeImage_SetChannel" FREEIMAGE-SETCHANNEL) :POINTER
              (DIB :POINTER) (DIB8 :POINTER) (CHANNEL :INT)) 

(CFFI:DEFCFUN ("FreeImage_GetComplexChannel" FREEIMAGE-GETCOMPLEXCHANNEL)
              :POINTER (SRC :POINTER) (CHANNEL :INT)) 

(CFFI:DEFCFUN ("FreeImage_SetComplexChannel" FREEIMAGE-SETCOMPLEXCHANNEL)
              :POINTER (DST :POINTER) (SRC :POINTER) (CHANNEL :INT)) 

(CFFI:DEFCFUN ("FreeImage_Copy" FREEIMAGE-COPY) :POINTER (DIB :POINTER)
              (LEFT :INT) (TOP :INT) (RIGHT :INT) (BOTTOM :INT)) 

(CFFI:DEFCFUN ("FreeImage_Paste" FREEIMAGE-PASTE) :POINTER (DST :POINTER)
              (SRC :POINTER) (LEFT :INT) (TOP :INT) (ALPHA :INT)) 

(CFFI:DEFCFUN ("FreeImage_Composite" FREEIMAGE-COMPOSITE) :POINTER
              (FG :POINTER) (USEFILEBKG :POINTER) (APPBKCOLOR :POINTER)
              (BG :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_JPEGCrop" FREEIMAGE-JPEGCROP) :POINTER
              (SRC_FILE :STRING) (DST_FILE :STRING) (LEFT :INT) (TOP :INT)
              (RIGHT :INT) (BOTTOM :INT)) 

(CFFI:DEFCFUN ("FreeImage_JPEGCropU" FREEIMAGE-JPEGCROPU) :POINTER
              (SRC_FILE :POINTER) (DST_FILE :POINTER) (LEFT :INT) (TOP :INT)
              (RIGHT :INT) (BOTTOM :INT)) 

(CFFI:DEFCFUN ("FreeImage_PreMultiplyWithAlpha" FREEIMAGE-PREMULTIPLYWITHALPHA)
              :POINTER (DIB :POINTER)) 

(CFFI:DEFCFUN ("FreeImage_FillBackground" FREEIMAGE-FILLBACKGROUND) :POINTER
              (DIB :POINTER) (COLOR :POINTER) (OPTIONS :INT)) 

(CFFI:DEFCFUN ("FreeImage_EnlargeCanvas" FREEIMAGE-ENLARGECANVAS) :POINTER
              (SRC :POINTER) (LEFT :INT) (TOP :INT) (RIGHT :INT) (BOTTOM :INT)
              (COLOR :POINTER) (OPTIONS :INT)) 

(CFFI:DEFCFUN ("FreeImage_AllocateEx" FREEIMAGE-ALLOCATEEX) :POINTER
              (WIDTH :INT) (HEIGHT :INT) (BPP :INT) (COLOR :POINTER)
              (OPTIONS :INT) (PALETTE :POINTER) (RED_MASK :UNSIGNED-INT)
              (GREEN_MASK :UNSIGNED-INT) (BLUE_MASK :UNSIGNED-INT)) 

(CFFI:DEFCFUN ("FreeImage_AllocateExT" FREEIMAGE-ALLOCATEEXT) :POINTER
              (TYPE :INT) (WIDTH :INT) (HEIGHT :INT) (BPP :INT)
              (COLOR :POINTER) (OPTIONS :INT) (PALETTE :POINTER)
              (RED_MASK :UNSIGNED-INT) (GREEN_MASK :UNSIGNED-INT)
              (BLUE_MASK :UNSIGNED-INT)) 

(CFFI:DEFCFUN
 ("FreeImage_MultigridPoissonSolver" FREEIMAGE-MULTIGRIDPOISSONSOLVER) :POINTER
 (LAPLACIAN :POINTER) (NCYCLE :INT)) 

(DEFUN GET-32BIT-DIB (PATH)
  (LET* ((DRAWING-TYPE (FREEIMAGE-GETFILETYPE PATH 0))
         (IMAGE (FREEIMAGE-LOAD DRAWING-TYPE PATH 0))
         (IMAGE32 (FREEIMAGE-CONVERTTO32BITS IMAGE))
         (FREEIMAGE-UNLOAD IMAGE))
    IMAGE32)) 

(DEFUN UNLOAD-DIB (BITMAP) (FREEIMAGE-UNLOAD BITMAP)) 

(defmacro with-loaded-32bit-map ((path &key width height bitvar widthvar heightvar) &body body)
  (let ((dib (gensym))
	(orig-w (if widthvar widthvar (gensym)))
	(orig-h (if heightvar heightvar (gensym)))
	(bits (if bitvar bitvar 'bits))
	(user-w (gensym))
	(user-h (gensym))
	(new-dib (gensym)))
    `(let* ((,user-w ,width)
	    (,user-h ,height)
	    (,dib (freeimage::get-32bit-dib ,path))
	    (,orig-w (freeimage:freeimage-getwidth ,dib))
	    (,orig-h (freeimage:freeimage-getheight ,dib))
	    (,bits))

       (if (or ,user-w ,user-h)
	   (let* ((new-dib (freeimage:freeimage-rescale ,dib ,user-w ,user-h)))
	     (freeimage:unload-dib ,dib)
	     (setf ,dib ,new-dib)
	     (setf ,orig-w ,user-w)
	     (setf ,orig-h ,user-h)))
       
       (setf ,bits (freeimage::freeimage-getbits ,dib))
       (freeimage:freeimage-flipvertical ,dib)
       ,@body

       (freeimage:unload-dib ,dib))))



(defmacro with-loaded-32bit-map ((path &key width height bitvar widthvar heightvar) &body body)
  (let ((dib (gensym))
	(w   (or widthvar (gensym)))
	(h   (or heightvar (gensym)))
	(bits (or bitvar (gensym)))
	(new-dib (gensym)))
    
    `(let ((,dib (freeimage::get-32bit-dib ,path)))
       (unwind-protect
	    (let ((,w (freeimage:freeimage-getwidth ,dib))
		  (,h (freeimage:freeimage-getheight ,dib))
		  (,bits))
	      
	      (when (or ,width ,height)
		(let* ((,new-dib (freeimage:freeimage-rescale ,dib ,w ,h :FILTER-BILINEAR)))
		  (freeimage:unload-dib ,dib)
		  (setf ,dib ,new-dib)
		  (when ,width (setf ,w ,width))
		  (when ,height (setf ,h ,height))))

	      (setf ,bits (freeimage::freeimage-getbits ,dib))
	      (freeimage:freeimage-flipvertical ,dib)
	      ,@body)
	 (freeimage:unload-dib ,dib)))))

		
